# UMass Marketplace API Configuration
# Spring Boot application configuration with profiles for different environments
spring:
  application:
    name: umass-marketplace-api
  
  # Database configuration - connects to PostgreSQL
  datasource:
    url: jdbc:postgresql://localhost:5432/umarket
    username: umarket
    password: umarket
    driver-class-name: org.postgresql.Driver
  
  # JPA/Hibernate configuration
  jpa:
    hibernate:
      ddl-auto: create-drop  # Create schema on startup, drop on shutdown
    properties:
      hibernate:
        format_sql: true  # Pretty print SQL queries in logs
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false  # Set to true for debugging
  
  # Flyway database migration configuration
  # Flyway temporarily disabled - using Hibernate schema creation
  # flyway:
  #   locations: classpath:db/migration
  #   baseline-on-migrate: true
  #   validate-on-migrate: true
  
  # OAuth2 configuration removed - using simple approach for now

# Server configuration
server:
  port: 8080
  servlet:
    context-path: /

# JWT and Email configuration removed - using simple approach for now

# SpringDoc OpenAPI configuration for Swagger UI
springdoc:
  swagger-ui:
    path: /swagger-ui
    enabled: true
  api-docs:
    enabled: true
    path: /v3/api-docs
  show-actuator: true

# Logging configuration
logging:
  level:
    edu.umass: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Development profile configuration
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/umarket
    username: umarket
    password: umarket

---
# H2 Database profile (for development when PostgreSQL not available)
spring:
  config:
    activate:
      on-profile: h2
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
    show-sql: false

---
# Test profile configuration
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:postgresql://localhost:5432/umarket_test
    username: umarket_test
    password: umarket_test
  jpa:
    hibernate:
      ddl-auto: create-drop  # For testing, recreate schema each time