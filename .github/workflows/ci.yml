# GitHub Actions CI workflow for UMass Marketplace
# Runs tests and linting for both Java API and React frontend
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Java API testing and validation
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: umarket_test
          POSTGRES_USER: umarket_test
          POSTGRES_PASSWORD: umarket_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run Maven tests
      run: mvn -B -q -DskipTests=false verify
      working-directory: ./api

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: api/target/surefire-reports/*.xml
        reporter: java-junit

  # React frontend testing and linting
  web-tests:
    name: Web Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: ./web

    - name: Run ESLint
      run: npm run lint
      working-directory: ./web

    - name: Build application
      run: npm run build
      working-directory: ./web

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: web/dist/

  # Docker build and test
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [api-tests, web-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build API Docker image
      run: docker build -t umass-marketplace-api:test ./api

    - name: Build Web Docker image
      run: docker build -t umass-marketplace-web:test ./web

    - name: Test Docker Compose
      run: |
        cd deploy
        docker-compose -f docker-compose.yml config
        echo "Docker Compose configuration is valid"

  # Security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [api-tests, web-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
